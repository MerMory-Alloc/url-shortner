name: Build and Publish Docker Image for Backend 

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*-bk"
    paths:
      - urlshortner_back/**
  pull_request:
    branches:
      - main
    paths:
      - urlshortner_back/**

env:
  APP_NAME: url-shortly-back
  APP_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/url-shortly-back

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.APP_IMAGE }}         
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: urlshortner_back/.
          file: urlshortner_back/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy-release:
    if: contains(github.ref, 'tags')
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - 
        name: Modify file
        run: |
          echo ${GITHUB_REF#refs/tags/}
          echo $GITHUB_REF#refs/tags/
          sed -i'' -E 's|^(\s*-?\s*image:\s*'${{env.APP_IMAGE}}':)[^ ]+|\1'${GITHUB_REF#refs/tags/}'|' k8s_files/dep/deploy_back.yaml
      - 
        name: Git Config and Commit
        run: |
          git config user.email "githubactionbot@myurlshortly.com"
          git config user.name "githubactionbot"
          git commit -am "GitHubActionBot update to $APP_NAME"
      - 
        name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{secrets.REPO_TOKEN}}
